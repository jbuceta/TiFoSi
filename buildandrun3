#!/bin/bash
clear
echo -n "1) Checking TiFoSi dependencies..."

array=("g++" "make" "python3")
for i in "${array[@]}"
do
    command -v $i >/dev/null 2>&1 || { 
        echo -en >&2 "\n$i is required and needs to be installed. Use 'sudo apt-get install $i'\n";deps=1;}
done
[[ $deps -ne 1 ]] && echo "OK" || { echo -en "\nInstall the above and rerun this script\n";exit 1;}

python -c 'import sys; print(".".join(map(str, sys.version_info[:3])))'|grep '2.7'>/dev/null 2>&1 || { 
        echo -en >&2 "\nPython 3.x is installed but the 'python' command calls a different version. Please correct this issue and rerun this script\n";exit 1;}


while true; do
    read -p "2) Review configuration file? (Y/N) (Q: exit review) " yn
    case $yn in
        [Nn]* )break;;
        [Yy]* )echo "******* BEGIN REVIEW ********";more ./config.xml; echo "******* END REVIEW ********";break;;
        * ) echo "Answer yes (Y/y) or no (N/n)!";;
    esac
done

#clear
while true; do
    read -p "3) Compile? (Y/N) (N: exit) " yn
    case $yn in
        [Nn]* )echo "* Bye...";exit;;
        [Yy]* )echo "* Compiling...";python compile3.py; cerror=$?; break;;
        * ) echo "Answer yes (Y/y) or no (N/n)!";;
    esac
done

if [ $cerror -ne 0 ]
then
    echo "* Ooooops..."; exit;
fi

# echo "*********"
# while true; do
#     read -p "Compilation errors? (Y/N) (Y: exit) " yn
#     case $yn in
#         [Yy]* )echo "* Ooooops..."; exit;;
#         [Nn]* )echo "* Good!"; break;;
#         * ) echo "Answer yes (Y/y) or no (N/n)!";;
#     esac
# done

clear
echo "4) Name of simulation? (do NOT use spaces)"
while true; do
read experiment
if [ -d "./$experiment" ]; then
	echo "* That directory already exists: choose another name!"
else
	mkdir ./$experiment
	echo "* Copying configuration file and executable..."
	cp ./config.xml ./$experiment/config.xml
	cp ./bin/tifosi ./$experiment/$experiment
	break
fi
done

cd ./$experiment/

clear
while true; do
    read -p "5) Run simulation? (Y/N) (N: exit) " yn
    case $yn in
        [Yy]* )echo "* Running..."; break;;
        [Nn]* )echo "* Bye!"; exit;;
        * ) echo "Answer yes (Y/y) or no (N/n)!";;
    esac
done

nice -n19 ./$experiment &
cd ..


